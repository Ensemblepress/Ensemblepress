import {
  fileExistsSync
} from "./chunk-WAEWSGBK.js";
import "./chunk-JIJ65JT6.js";
import "./chunk-WADS2TV5.js";
import {
  require_lib
} from "./chunk-GEN4RXTD.js";
import "./chunk-BYC3NA2Y.js";
import "./chunk-SAR5HGRG.js";
import "./chunk-NABCTJNW.js";
import "./chunk-YC4FLMDD.js";
import {
  cwd,
  joinPath,
  sniffForPath
} from "./chunk-UNPXLODI.js";
import "./chunk-LSCXQWNO.js";
import "./chunk-K6257PKA.js";
import "./chunk-XQFDS44U.js";
import "./chunk-AMAYT2P2.js";
import "./chunk-VM4POVNV.js";
import "./chunk-ZPFJOUKZ.js";
import "./chunk-T5LLJYYS.js";
import {
  __toESM,
  init_cjs_shims
} from "./chunk-ZPL24Y2D.js";

// ../cli-kit/src/public/node/custom-oclif-loader.ts
init_cjs_shims();
var import_core = __toESM(require_lib(), 1);
var ShopifyConfig = class extends import_core.Config {
  constructor(options) {
    const path = sniffForPath() ?? cwd();
    if (fileExistsSync(joinPath(`${path}`, "package.json"))) {
      options.pluginAdditions = {
        core: ["@shopify/cli-hydrogen"],
        path
      };
    }
    super(options);
    this["determinePriority"] = this.customPriority;
  }
  customPriority(commands) {
    const oclifPlugins = this.pjson.oclif?.plugins ?? [];
    const commandPlugins = commands.sort((aCommand, bCommand) => {
      const pluginAliasA = aCommand.pluginAlias ?? "A-Cannot-Find-This";
      const pluginAliasB = bCommand.pluginAlias ?? "B-Cannot-Find-This";
      const aIndex = oclifPlugins.indexOf(pluginAliasA);
      const bIndex = oclifPlugins.indexOf(pluginAliasB);
      if (aCommand.pluginType === "core" && bCommand.pluginAlias === "@shopify/cli-hydrogen") {
        return 1;
      }
      if (aCommand.pluginAlias === "@shopify/cli-hydrogen" && bCommand.pluginType === "core") {
        return -1;
      }
      if (aCommand.pluginType === "core" && bCommand.pluginType === "core") {
        return aIndex - bIndex;
      }
      if (bCommand.pluginType === "core" && aCommand.pluginType !== "core") {
        return 1;
      }
      if (aCommand.pluginType === "core" && bCommand.pluginType !== "core") {
        return -1;
      }
      if (aCommand.pluginType === "jit" && bCommand.pluginType !== "jit") {
        return 1;
      }
      if (bCommand.pluginType === "jit" && aCommand.pluginType !== "jit") {
        return -1;
      }
      return 0;
    });
    return commandPlugins[0];
  }
};
export {
  ShopifyConfig
};
//# sourceMappingURL=custom-oclif-loader-ZH42ZTTC.js.map
