<script src="{{ 'lr-variants-selected.js' | asset_url }}" defer="defer"></script>
{{ 'lr-tiktok_video.css' | asset_url | stylesheet_tag }}

{{ 'lr-tiktok_video.css' | asset_url | stylesheet_tag }}

<div class="pdp-container" id="pdp">
  <div class="pdp-main">
    <div class="pdp-main-visuals">
      <div class="pdp-image-set">
        <div class="pdp-image-set-grid gallery">
          {% for media in product.media %}
            <div class="pdp-image-set-img">
              <a
                href="{{ media.src | img_url:'master' }}"
                data-pswp-width="3000"
                data-pswp-height="2000"
                data-pswp-src="{{ media.src | img_url: 'master' }}"
                target="_blank"
                class="image-zoomable">
                <img src="{{ media.src | img_url:'master' }}">
              </a>
            </div>
          {% endfor %}

          {% assign tiktok_video = product.metafields.custom.tiktok_link %}
		  
		  {% assign tiktok_video = product.metafields.custom.tiktok_link %}

          {% if tiktok_video %}
            <div class="pdp-image-set-tiktok">
                <div class="pdp-image-set-tiktok-content">
                  <strong>Lost River</strong>
                  <br>TikTok
                  <br>
                  <br>Quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
                </div>
          
                <div class="pdp-image-set-tiktok-video">
                    <video id="myVideo" width="100%" height="100%" autoplay="" loop="" playsinline="">
                      <source src="{{ tiktok_video }}" type="video/mp4">
                    </video>
                </div>
            </div>
          {% endif %}
          
          {% assign video_url = product.metafields.custom.video_url %}

          {% if video_url %}
            <div class="pdp-image-set-video">
              <video id="myVideo" width="100%" height="100%" autoplay="" loop="" playsinline="">
                <source src="{{ video_url }}" type="video/mp4">
              </video>
            </div>

          {% endif %}  
        

          {% endif %}
		  
        </div>
      </div>
    </div>
    <div class="Plx Plx--below Plx-effect-pdp" style="">
      <div class="pdp-scroller"></div>
    </div>
    
    <div class="pdp-main-info">
      <div class="pdp-info-container">
        <div class="pdp-info">
          <div class="pdp-info-swiper pdp-main-swiper">
            <div class="swiper-container swiper-container-initialized swiper-container-horizontal swiper-container-pointer-events swiper-pdp">
              <div class="swiper-button-prev"></div>
              <div class="swiper-button-next"></div>
              <div class="swiper-wrapper" style="transition-duration: 0ms;">
                {% for media in product.media %}
                  <div class="swiper-slide swiper-slide-duplicate" data-swiper-slide-index="{{ forloop.index }}">
                    <a
                      href="{{ media.src | img_url:'master' }}"
                      target="_blank"
                      class="image-zoomable">
                      <img src="{{ media.src | img_url:'master' }}">
                    </a>
                  </div>
                {% endfor %}
              </div>
            </div>
          </div>
          <!-- swiper CSS -->
          
          
          <div class="pdp-info-header">
            <div class="pdp-info-header-inner">
               <div class="pdp-headline">
                {% assign author_name = product.metafields.custom.author_name %}  
                <div class="pdp-headline-author" id="get_author_name">{{ author_name }}</div>
                <div class="pdp-headline-title">{{ product.title }}</div>
              </div>
              <div class="pdp-labels"></div>
            </div>
          </div>
          {% if product.variants.size > 1 %}
          <!-- Loop through the variants -->
          {% for variant in product.variants %}
              <div class="pdp-info-header-secondary" current_variants_id="{{ variant.id }}">
                {% assign short_des = variant.metafields.custom.short_description %}
                <div class="pdp-description">
                  <p>{{ short_des }}</p>
                </div>
                {% assign bulletpoint = variant.metafields.custom.short_bullet_point | split:'|' %}
                  <ul class="pdp-keywords">
                    {% for text in bulletpoint %}
                      <li>{{ text }}</li>
                    {% endfor %}
                    <li class="pdp-details" id="variant_detail_{{ variant.id }}">
                      <span class="pdp-link pdp-link-chevron"><span>Details</span></span>
                    </li>
                </ul>
              </div>
               <div id="model_id_{{ variant.id }}" class="ReactModalPortal ReactModal__Overlay ReactModal__Overlay--before-open overlay overlay-pdp">
                  <div id="model_contect_id_{{ variant.id }}" class="ReactModal__Content ReactModal__Content--before-open overlay-panel" tabindex="-1" role="dialog" aria-modal="true">
                        <div class="overlay-close"><span>×</span></div>
                        <div class="overlay-panel-inner">
                            <div class="overlay-outer-title">Details</div>
                            <div class="panel-content">
                                   {% assign bulletpoint = variant.metafields.custom.book_detail | split:'|' %}
                                    <div class="block">
                                        <div class="hd">The Book</div>
                                        <div class="copy">
                                          <ul class="ul-listing">
                                           {% for text in bulletpoint %}
                                             {% if text != blank %}
                                                <li>{{ text }}</li>
                                             {% endif %}
                                           {% endfor %} 
                                          </ul>
                                        </div>
                                    </div>
                                  <div class="block">
                                      <div class="hd">The Author</div>
                                      <div class="copy">
                                          <ul class="ul-listing">
                                              <li>Scott Schomburg is a writer based in New York City. His work has appeared in <em>The Paris Review</em>, <em>The Bare Life Review</em>, <em>After the Art</em>, <em>The Millions</em>, and elsewhere. He has received a writing
                                                  fellowship from the Virginia Center for the Creative Arts, and he holds a Master of Divinity from Duke Divinity School.</li>
                                              <li><a href="#">Read Scott on Joseph Mitchell’s collection of objects here</a>.</li>
                                          </ul>
                                      </div>
                                  </div>         
                                  {% assign shipping_detail = variant.metafields.custom.shipping_and_returns  | split:'|' %}
                                          <div class="block" current_variants_id="{{ variant.id }}">
                                             <div class="hd">Shipping and Returns</div>
                                                  <div class="copy">      
                                                    {% if shipping_detail != blank %}
                                                       {% for shipping_Text in shipping_detail %}     
                                                            <ul class="ul-listing">     
                                                                <li>{{ shipping_Text }}</li>    
                                                            </ul>
                                                       {% endfor %}   
                                                    {% endif %}             
                                                   </div>
                                              </div> 
                                            </div>
                                          </div>
                                      </div>
                                   </div> 
                              {% endfor %}  
        {% else %}
          <!-- Display product description when no variants are available or only the "Default Title" variant exists -->
          <div class="pdp-description">
            {{ product.description }}
            <ul class="pdp-keywords">
              <li class="pdp-details">
                <span class="pdp-link pdp-link-chevron"><span>Details</span></span>
              </li>
            </ul>  
          </div>
        {% endif %}
          <div class="pdp-info-header-tertiary">
            <div class="pdp-product-variants ">
              <div class="pdp-product-variants-list is-on">
                <div class="pdp-product-variants-list-scroll">
                  <ul id="variant-selector">
                    {% for variant in product.variants %} 
                        <li class="variant_li {% if forloop.first %}is-active selected{% endif %}" data-id="{{ variant.id }}">
                            <a href="javascript:void(0)">
                              {% unless variant.title == "Default Title" %}
                                <div class="variant" name="variant" >{{ variant.title }}</div>               
                                {% else %}
                                <div class="variant" name="variant"></div>     
                              {% endunless %}  
                                <div class="price">{{ variant.price | money }}</div>
                            </a>
                        </li>                          
                      {% endfor %} 
                  </ul>
                </div>
              </div>
            </div>
          </div>
          <div class="pdp-buttons-triangle">
            <img src="{{ 'shape-triangle-1px.svg' | asset_url }}">
          </div>
          <div class="pdp-info-body-secondary">
            
            <div class="pdp-buttons " id="pdp-button-addtobag">
              <button class="button-addtobag  Xis-disabled" id="add-to-bag">
                <span class="button-addtobag-cta"
                  ><span class="button-addtobag-cta-title">Add to bag</span
                  ><span class="button-addtobag-cta-price">USD 22.00</span></span
                ><span class="button-addtobag-help">Select a variant</span>
              </button>
            </div>
            <div class="pdp-buttons is-off" id="pdp-button-notifyme">
              <button class="button-italic button-xlarge button-notifyme">Notify me when available</button>
            </div>
          </div>
          <div class="pdp-info-body-tertiary"></div>
        </div>
        <div class="pdp-info-footer">
          <ul class="pdp-keywords pdp-keywords-blank">
            <li class="pdp-storeavailability ">
              <span class="pdp-link pdp-link-chevron"><span>Store availablity</span></span>
            </li>
            <li class="pdp-shipping ">
              <span class="pdp-link pdp-link-chevron"><span>Delivery &amp; returns</span></span>
            </li>
          </ul>
          <ul class="pdp-info-footer-links">
            <li class="pdp-info-footer-links-back ">
              <a href="/woman/outerwear"><span>Back to outerwear</span></a>
            </li>
            <li class="pdp-info-footer-links-assistance"><span>Questions?</span></li>
          </ul>
        </div>
      </div>
    </div>
    <div class="pdp-main-buttons-mobile">
      <div class="pdp-buttons " id="pdp-button-addtobag">
        <button class="button-addtobag  Xis-disabled  ">
          <span class="button-addtobag-cta"
            ><span class="button-addtobag-cta-title">Add to bag</span
            ><span class="button-addtobag-cta-price">USD 22.00</span></span
          ><span class="button-addtobag-help">Select a variant</span>
        </button>
      </div>
      <div class="pdp-buttons is-off" id="pdp-button-notifyme">
        <button class="button-italic button-xlarge button-notifyme">Notify me when available</button>
      </div>
    </div>
  </div>
</div>

<style>
.pdp-product-variants .pdp-product-variants-list ul li.is-active {
    border: 2px solid #000;
    border-radius: 2px 19px 19px 2px;
}
</style>

<!-- PDP Gallery -->
<!-- PhotoSwipe HTML -->
<!-- Root element of PhotoSwipe. Must have class pswp -->
<div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
    <!-- Background of PhotoSwipe. 
         It's a separate element as animating opacity is faster than rgba(). -->
    <div class="pswp__bg"></div>

    <!-- Slides wrapper with overflow:hidden. -->
    <div class="pswp__scroll-wrap">
        <!-- Container that holds slides.
            PhotoSwipe keeps only 3 of them in the DOM to save memory.
            Don't modify these 3 pswp__item elements, data is added later on. -->
        <div class="pswp__container">
              <div class="pswp__item"></div>
        </div>

        <!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. -->
        <div class="pswp__ui pswp__ui--hidden">
            <div class="pswp__top-bar">
                <!-- Controls are self-explanatory. Order can be changed. -->
                <div class="pswp__counter"></div>
                <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>
                <button class="pswp__button pswp__button--share" title="Share"></button>
                <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>
                <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>

                <!-- Preloader -->
                <div class="pswp__preloader">
                    <div class="pswp__preloader__icn">
                        <div class="pswp__preloader__cut">
                            <div class="pswp__preloader__donut"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                <div class="pswp__share-tooltip"></div>
            </div>
            <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)"></button>
            <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)"></button>
            <div class="pswp__caption">
                <div class="pswp__caption__center"></div>
            </div>
        </div>
    </div>
</div>
<!-- PhotoSwipe CSS -->
{{ 'photoswipe.css' | asset_url | stylesheet_tag }}
<!-- PhotoSwipe JS -->
<script type="module">
    //console.log('lightbox');
    import PhotoSwipeLightbox from '{{ 'photoswipe-lightbox.esm.js' | asset_url }}';
    import PhotoSwipe from '{{ 'photoswipe.esm.js' | asset_url }}';
    // Flag to track first interaction
    let firstZoomed = 0;
    const lightbox = new PhotoSwipeLightbox({
        gallery: '.gallery',
        children: 'a',
        pswpModule: PhotoSwipe,
        // Enable tap to close
        bgOpacity: 1, // Ensure the background is fully opaque to prevent seeing white spaces
        //paddingFn: () => ({ top: 0, bottom: 0, left: 0, right: 0 }), // Remove any padding
        //showHideOpacity: true,
        //spacing: 0, // Set spacing between slides to 0
        loop: true,
        initialZoomLevel: 'fill', // Initially fit the image to screen
        //secondaryZoomLevel: '1', // Fully zoom in to original size on second click
        //maxZoomLevel: 2, // Maximum zoom level
        //initialPointerPos: 'center', // Start zoom from the center of the image
        // Other configurations
        zoom: false,
        //closeOnVerticalDrag: false,     
    });

  lightbox.firstZoomed =false;
  //const pswp = lightbox.pswp;
  lightbox.on('zoomPanUpdate', () => { //console.log(lightbox.firstZoomed);
    // Check if this is the first zoom interaction                                   
    if (!lightbox.firstZoomed == true) { 
      //console.log('ttt');
      lightbox.firstZoomed = true; // Mark that zoom interaction happened
      pswp.close(); // Close the gallery on first zoom
    }
  });
  lightbox.init();
</script>
<!-- END PDP Gallery --> 

<!-- swiper JS Mobile -->
<script src="{{ 'swiper-bundle.min.js' | asset_url }}" defer></script>

<!-- Swipe Slide Mobile Start --> 
<script type="text/javascript">
  document.addEventListener('DOMContentLoaded', function () {
  var swiper = new Swiper('.swiper-pdp', {
    slidesPerView: 10,
    spaceBetween: 20,
    breakpoints: {
      575: {  // This is the new breakpoint for max-width 575px
        slidesPerView: 1
      },
      320: {
        slidesPerView: 1
      }
    },
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev'
    }
  });
});   
</script>  

<!-- Swipe Slide Mobile End --> 

<!---- Video Start --->
<script>
  window.onload = function() {
    var video = document.getElementById("myVideo");
    video.autoplay = true;
    video.muted = true; // This is necessary for autoplay to work in some browsers
    video.play();
    // Stop the video after 5 seconds
    // setTimeout(function() {
    //   video.pause();
    // }, 5000); // 5000 milliseconds = 5 seconds
  };
</script>

<!---- Video End -->

<script>
  window.productMetafields = {
    {% for item in cart.items %}
      "{{ item.product_id }}": {
        "author_name": "{{ item.product.metafields.custom.author_name }}"
      }{% unless forloop.last %},{% endunless %}
    {% endfor %}
  };
</script>  
<script>
  $(document).ready(function() {

     $('.variant_li').on('click', function() {
        $('.variant_li').removeClass("is-active");
        $('.variant_li').removeClass("selected");
       $(this).addClass("is-active");
       $(this).addClass("selected");
    });
    
    $('#add-to-bag').on('click', function() {
        
        // Your existing code logic here
        var selectedVariantId = $('.variant_li.selected').data('id');
        
        // Example AJAX call to add to cart
        if (selectedVariantId) {
            $.ajax({
                type: 'POST',
                url: '/cart/add.js',
                data: {
                    id: selectedVariantId,
                    quantity: 1
                },
                dataType: 'json',
                success: function(response) {
                  updateCartDrawer();  
                },
                error: function(error) {
                    console.error('Error:', error);
                }
            });
        } else {
            console.log('Please select a variant.');
        }
    });
});

function updateCartDrawer() {
  
    fetch('/cart.js')
      .then(response => response.json())
      .then(cart => {
        var cartDrawerBody = document.querySelector('.cart-drawer-body');
        if (cartDrawerBody) {
        cartDrawerBody.innerHTML = '';
  
        cart.items.forEach((item, index) => {
          const product = item.product;
          const productName = item.product_title;
          let variantName = item.variant_title;
          if (variantName === null || variantName === undefined || variantName.trim() === '') {
              variantName = ''; 
          } else {
              variantName = variantName;
          }
         
          //console.log(productName);
           //var authorName = $('#get_author_name').text();          
           //var authorName = document.getElementById('get_author_name').text();          
           var authorName = window.productMetafields[item.product_id]?.author_name || 'Unknown Author';
          // Use authorName and other details to build the cart item HTML
          //console.log(authorName);
           if(authorName == 'Unknown Author'){
             var authorName_title = $('#get_author_name').text();
             authorName = authorName_title;
           }             
          var cartItem = `  
          <div class="cart-item item item-product item-product-minibag " data-line="${index + 1}">
            <div class="image">
              <a href="${ item.url }">
                <img src="${ item.image }" alt="${ productName }">
              </a>
            </div>
            <div class="info">
              <div class="caption">
                <div class="title">
                  <span class="title-inner">
                   
                    <span class="title-author" author-title="">${ authorName }</span>
                    <span class="title-title">${ productName }</span>
                  </span>
                  <span class="title-favorite">Favorite </span>
                </div>
                <div class="values"><span class="value-material">${ variantName }</span></div>
                <div class="tools">
                   <div class="tool tool-quantity">
                      <div class="quantity">× <span class="quantity-value">1</span></div>
                        <div class="quantity-modifiers quantity-controls">
                          <button class="icon-quantity icon-quantity-minus decrease-quantity" data-line="${index + 1}"></button>
                          <span class="icon-quantity icon-quantity-amount quantity_upd">${item.quantity}</span>
                          <button class="icon-quantity icon-quantity-plus increase-quantity" data-line="${index + 1}"></button>
                        </div>
                   </div> 
                    <div class="tool tool-remove">
                        <a href="javascript:void(0)" class="link-remove remove-item" data-line="${index + 1}"><span></span></a>
                    </div>
                </div>
           </div>   
           <div class="price">
            <div class="tools">
              <div class="tool tool-quantity">
                <div class="quantity">× <span class="quantity-value">1</span></div>
                <div class="quantity-modifiers quantity-controls">
                  <button class="icon-quantity icon-quantity-minus decrease-quantity" data-line="${index + 1}"></button>
                  <span class="icon-quantity icon-quantity-amount quantity_upd" id="qty_${ item.id }">${item.quantity}</span>
                  <button class="icon-quantity icon-quantity-plus increase-quantity" data-line="${index + 1}"></button>
                </div>
              </div>
            </div>
            <div class="price-amount">1 ×</div>
              <div class="price-price" id="price_${ item.id }">${formatMoney(item.original_line_price, cart.currency)}</div> 
            </div>
           </div>
          </div>`;

          cartDrawerBody.insertAdjacentHTML('beforeend', cartItem);
        });
        
         var totalQuantity = calculateTotalQuantity(cart.items);
        var discount_code;
        if(totalQuantity != 0){
          if (cart.items[0].discounts[0] && cart.items[0].discounts[0].length != "") {
               discount_code = cart.items[0].discounts[0].title; 
               var class_add = '';
               var code_apply = 'is-off';
               var add_disc = '';
          }else{
                discount_code = '';
                var class_add = 'is-off';
                var code_apply = '';
                 var add_disc = 'item-total';
          }
        }else{
           discount_code = "";
        }
        
        var cart_footer = ` <div id="cart_footer"> 
            <div class="item item-total item-total-first item-total-promo" id="item-total-promo">
              <div class="caption" id="caption">
                <div class="caption-option promo_label" id="icon-promo-symbol"><span class="icon-promo" id="icon-promo-text"></span> Add promotion code</div>
                <div class="caption-option promo_input is-off" id="promo_input">
                  <input type="email" id="promo-code-input" placeholder="Enter promotion code" class="input-promo" style="outline: none;">
                  <button class="button-promo" id="apply-promo-code">Ok</button>
                </div>
              </div>
            </div>
            <div class="item item-total item-total-final is-discount ${ class_add }">
              <div class="caption"><span id="promo_code_text">Discount Promo Code : ${ discount_code }</span><span class="note"><div id="discount-message"></div></span></div>
              <button id="remove-discount" class="remove-discount-button"></button>
              <div class="price" id="cart_total_discount"> ${formatMoney(cart.total_discount, cart.currency)}</div>
            </div>
            <div class="item item-total item-total-final">
              <div class="caption">Total <span class="note">Taxes and duties incl.</span></div>
              <div class="price cart-drawer-footer"></div>
            </div>
            <div class="item item-button item-button-sticky item-button-checkout">
              <a class="button button-xlarge button-inverted button-orange" href="/checkout">Checkout</a>
              <button class="button button-xlarge is-off">Continue shopping</button>
            </div>
        </div>
        </div>`;
      
        cartDrawerBody.insertAdjacentHTML('beforeend', cart_footer);

        var cart_empty_message = `<div class="nav-layout" id="cart-empty-message" style="display: none;">  
                    <a href="/collections/all" class="button">Continue </a>   
        </div>`;

        cartDrawerBody.insertAdjacentHTML('beforeend', cart_empty_message);
      
        document.querySelector('.cart-drawer-footer').textContent = `${formatMoney(cart.total_price, cart.currency)}`;
        var totalQuantity = calculateTotalQuantity(cart.items);
        document.getElementById('total-quantity').textContent = totalQuantity;
        var totalCartQuantityElement = document.getElementById('total-cart-quantity');
        totalCartQuantityElement.textContent = totalQuantity;
        if(totalQuantity == 0){  
          document.getElementById('cart_footer').style.display = 'none';
          document.getElementById('cart-empty-message').style.display = 'flex';
        } 
        }
        $("#nav-bag").addClass('is-on');
        attachCartItemEvents();  
        
      });
  }

  function attachCartItemEvents() {
    var increaseButtons = document.querySelectorAll('.increase-quantity');
    var decreaseButtons = document.querySelectorAll('.decrease-quantity');
    var removeButtons = document.querySelectorAll('.remove-item');
    
    increaseButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        updateCartItemQuantity(button.dataset.line, 1);
      });
    });

    decreaseButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        updateCartItemQuantity(button.dataset.line, -1);
      });
    });

    removeButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        removeCartItem(button.dataset.line);
      });
    });
  }

  function updateCartItemQuantity(line, delta) {
    var quantityElement = document.querySelector(`.cart-item[data-line="${line}"] .quantity_upd`);
    var newQuantity = parseInt(quantityElement.textContent) + delta;

    if (newQuantity < 1) {
      removeCartItem(line);
    } else {
      fetch('/cart/change.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({ line: parseInt(line), quantity: newQuantity })
      })
      .then(response => response.json())
      .then(cart => {
        //updateCartDrawer();
        // Update the quantity
        //console.log(cart);
        quantityElement.textContent = newQuantity;

        // Get the specific item based on the line number
        var cartItem = cart.items[line - 1];  // line is 1-indexed
        //console.log(cartItem);
        
        // Update the price for the specific item qty
        var itemPriceElement = document.querySelector(`#qty_${cartItem.id}`);
        if (itemPriceElement) {
          itemPriceElement.textContent = cartItem.quantity;
        }
        
        // Update the price for the specific item price
        var itemPriceElement = document.querySelector(`#price_${cartItem.id}`);
        if (itemPriceElement) {
          itemPriceElement.textContent = formatMoney(cartItem.original_line_price, cart.currency);
        }
        //console.log(cart);
         quantityElement.textContent = newQuantity;
         var cart_total_price_value = cart.original_total_price - cart.total_discount;   
         document.querySelector('#cart_total_discount').textContent = formatMoney(cart.total_discount, cart.currency);
         document.querySelector('.cart-drawer-footer').textContent = formatMoney(cart_total_price_value, cart.currency);
         var totalCartQuantityElement = document.getElementById('total-cart-quantity');
         totalCartQuantityElement.textContent = calculateTotalQuantity(cart.items);
      });
    }
  }

  function removeCartItem(line) {
    fetch('/cart/change.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
      body: JSON.stringify({ line: parseInt(line), quantity: 0 })
    })
    .then(response => response.json())
    .then(cart => {
      //console.log(cart);
      //updateCartDrawer();
        document.querySelector(`.cart-item[data-line="${line}"]`).remove();
        var cart_total_price_value = cart.original_total_price - cart.total_discount;
        document.querySelector('#cart_total_discount').textContent = formatMoney(cart.total_discount, cart.currency);
        document.querySelector('.cart-drawer-footer').textContent = formatMoney(cart_total_price_value, cart.currency);
        var totalCartQuantityElement = document.getElementById('total-cart-quantity');
        totalCartQuantityElement.textContent = calculateTotalQuantity(cart.items);
        if (cart.item_count == 0) {
            document.getElementById('cart_footer').style.display = 'none';
            document.getElementById('cart-empty-message').style.display = 'flex';
        }        
    });
  }
    function formatMoney(cents, currency) {
      let money = (cents / 100).toFixed(2);
      switch (currency) {
        case 'USD':
          return `$${money}`;
        case 'EUR':
          return `€${money}`;
        case 'GBP':
          return `£${money}`;
        // Add more currency cases as needed
        default:
          return `${money} ${currency}`;
      }
  }

  function calculateTotalQuantity(items) {
    return items.reduce((total, item) => total + item.quantity, 0);
  }

  document.addEventListener('cart:updated', updateCartDrawer);
  // Call updateCartDrawer initially to load the cart contents
  updateCartDrawer();
  
</script>
{% schema %}
{
  "name": "Custom Product Page",
  "settings": [

  ]
}
{% endschema %}
