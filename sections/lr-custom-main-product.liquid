<script src="{{ 'lr-variants-selected.js' | asset_url }}" defer="defer"></script>
{{ 'lr-tiktok_video.css' | asset_url | stylesheet_tag }}
{{ 'lr-custom-main-product.css' | asset_url | stylesheet_tag }}
{{ 'lr-custom-omnisend-back-in-stock.css' | asset_url | stylesheet_tag }}
<script>
  window.product = {
    variants: [
      {% for variant in product.variants %}
        {
          "id": {{ variant.id }},
          "available": {{ variant.available | json }},
          "inventory_policy": "{{ variant.inventory_policy }}",
          "inventory_quantity": {{ variant.inventory_quantity }}
        }{% unless forloop.last %},{% endunless %}
      {% endfor %}
    ]
  };
</script>
<style>
/* Styles for desktop (above 835px) */
@media screen and (min-width: 836px) {
  /* Add your desktop-specific styles here */
  .lr_pdp_mobile_detail {
    display: none !important; 
  }
}
/* Styles for mobile (below 835px) */
@media screen and (max-width: 835px) {
  /* Add your mobile-specific styles here */
  .lr_pdp_desktop_detail {
    display: none !important; 
  }

  .swiper-pdp .swiper-slide video {
    width: 100%;
    aspect-ratio: 3 / 4;
    object-fit: cover;
    display: block;
  }
  
}
@media (max-width: calc(834px)) {  
  button.button-addtobag.Xis-disabled.add-to-cart-on_mobile.add-to-cart-btn-mobile {
      padding: 2px 12px 0;
      text-transform: uppercase;
  }
}  
  
.pdp-main-visuals .pdp-image-set-grid .pdp-image-set-tiktok .pdp-image-set-tiktok-content a {
    text-decoration: none;
    color: #000;
}
  
</style>  
<div class="pdp-container" id="pdp">
  <div class="pdp-main">
    <div class="pdp-main-visuals">
      <div class="pdp-image-set">
        <div class="pdp-image-set-grid gallery pdp-desktop">
          {% for media in product.media %}
            <div class="pdp-image-set-img">
              <a
                href="{{ media.src | img_url:'master' }}"
                data-pswp-width="3000"
                data-pswp-height="2000"
                data-pswp-src="{{ media.src | img_url: 'master' }}"
                target="_blank"
                class="image-zoomable">
                <img src="{{ media.src | img_url:'master' }}">
              </a>
            </div>
          {% endfor %}
          
          {% assign tiktok_video = product.metafields.custom.tiktok_link %}
          {% assign tiktok_title = product.metafields.custom.tiktok_title %}
          {% assign tiktok_title_link = product.metafields.custom.tiktok_title_link %}
                    
          {% if tiktok_video %}
            <div class="pdp-image-set-tiktok">
                <div class="pdp-image-set-tiktok-content">
                  <strong>Lost River</strong>
                  {% if tiktok_title != blank %}
                    <br>
                    <a href="{{ tiktok_title_link | default: '#' }}" target="_blank">{{ tiktok_title }}</a>
                    <br>                  
                  {% else %}
                    <br>
                    <a href="https://8b47fd-7d.myshopify.com/products/crying-in-h-mart" target="_blank">TikTok</a>
                    <br>
                  {% endif %}
                  <br>Quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
                </div>
                  <div class="pdp-image-set-tiktok-video">
                  <a href="{{ tiktok_title_link | default: '#' }}" target="_blank">  
                      <video id="myVideo" class="myVideodesktop" width="100%" height="100%" loop="" playsinline="" autoplay muted controls>
                        <source src="{{ tiktok_video }}" type="video/mp4">
                      </video>  
                  </a>
               </div>
            </div>
          {% endif %}
          {% assign video_url = product.metafields.custom.video_url %}
            {% if video_url %}
              <div class="pdp-image-set-video">
                <video id="myVideo" class="myVideodesktop" width="100%" height="100%"  loop="" playsinline="" autoplay muted controls>
                  <source src="{{ video_url }}" type="video/mp4">
                </video>
              </div>
            {% endif %}
        </div>
      </div>
    </div>
    <div class="Plx Plx--above Plx-effect-pdp" style="">
      <div class="pdp-scroller"></div>
    </div>
    
    <div class="side-bar" id="side-bar" data-height=""></div>
    <div class="side-bar-omnisend-height" id="side-bar-omnisend-height" data-height=""></div>
    <div class="check-verient-stock" id="check-verient-stock" data-available="false"></div>
    
    <div class="pdp-main-info">
      <div class="pdp-info-container">
        <div class="pdp-info">
          <div class="pdp-info-swiper pdp-main-swiper pdp-mobile">
            <div class="swiper-container swiper-pdp">
              <div class="swiper-wrapper">
                {% for media in product.media %}
                  <div class="swiper-slide mobile">
                    <a href="{{ media.src | img_url:'master' }}" data-pswp-width="{{ media.width }}" data-pswp-height="{{ media.height }}" class="image-zoomable">
                      <img src="{{ media.src | img_url:'master' }}" alt="{{ media.alt }}">
                    </a>
                  </div>
                 {% endfor %}
                 {% if tiktok_video != blank %} 
                  <div class="swiper-slide myVideoMobile" data-type="video">
                    <div style="position: relative; width: 100%; height: 100%;">
                     <a id="lr-custom-mobile-tiktok-atag" href="{{ tiktok_title_link | default: '#' }}" target="_blank" rel="noopener noreferrer">
                      <video id="lr-custom-mobile-tiktok" class="lr-custom-mobile-tiktok lr-mobile-video" loop="true" playsinline="" autoplay muted src="{{ tiktok_video }}" width="100%" height="100%" controls></video>
                     </a>
                      <div id="video-overlay" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; z-index: 10;"></div>
                      </div>
                   </div>
                  {% endif %}
                  {% if video_url !=blank %}
                  <div class="swiper-slide myVideoMobile" data-type="video">
                      <video id="lr-custom-mobile-video" class="lr-custom-mobile-video lr-mobile-video lr-mobile-view-2"loop="true" playsinline="" autoplay muted src="{{ video_url }}" width="100%" height="100%" controls></video>
                  </div>
                  {% endif %}
                </div>
              <div class="swiper-pagination"></div>
              <div class="swiper-button-next"></div>
              <div class="swiper-button-prev"></div>
            </div>
          </div>
          <!-- swiper CSS -->
          <div class="pdp-info-header">
            <div class="pdp-info-header-inner">
               <div class="pdp-headline">
                {% assign author_name = product.metafields.custom.author_name %}  
                <div class="pdp-headline-author" id="get_author_name">{{ author_name }}</div>
                <div class="pdp-headline-title">{{ product.title }}</div>
              </div>
              <div class="pdp-labels"></div>
            </div>
          </div>
          
          {% if product.variants.size  %}         
          <!-- Loop through the variants -->
            {% for variant in product.variants %}
              <div class="pdp-info-header-secondary" current_variants_id="{{ variant.id }}">

                {% assign short_des = variant.metafields.custom.short_descriptions %}
                  {% if short_des %}
                    <div class="pdp-description">
                      <p>{{ short_des }}</p>
                    </div>
                  {% else %}
                    <div class="pdp-description"> {{ product.description }} </div>
                  {% endif %}  
                  
                  <ul class="pdp-keywords"> 
                    {{ variant.metafields.custom.product_bullet_points | metafield_tag }} 
                      <li class="pdp-details lr_pdp_mobile_detail" current_variants_id="{{ variant.id }}" id="variant_detail_{{ variant.id }}">
                        <span class="pdp-link pdp-link-chevron">
                        <span tabindex="0" onkeydown="if(event.key === 'Enter' || event.key === ' ') this.click();">Details </span>
                        </span>
                      </li>
                  </ul>                 
              </div>  
              
              {% endfor %}  
            
          {% else %}
            {% comment %}
            <!-- Display product description when no variants are available or only the "Default Title" variant exists -->
            <div class="pdp-description">
              --{{ product.description }}
              <ul class="pdp-keywords">
                <li class="pdp-details">
                  <span class="pdp-link pdp-link-chevron"><span>Details</span></span>
                </li>
              </ul>  
            </div>
            {% endcomment %}  
          {% endif %}          
      
          <div class="pdp-info-body-secondary desktop pdp-info-body-secondary-get-height">
            <!-- start Back in stock -->
            {% assign omnisend_form_available = false %}
                {% for collection in product.collections %}
                    {% if collection.handle == 'forthcoming' %}
                      <!-- Your specific code here -->
                      <div class="omnisend_height" id="omnisend_height" style="">
                         <!-- dev store id
                         <div id="omnisend-embedded-v2-677e509aef3ff98a1103c138"></div>-->
                         <!-- Staging store id -->
                         <div id="omnisend-embedded-v2-677e50a3622d57947244e294"></div>
                         <!-- Production id -->
                         <!--<div id="omnisend-embedded-v2-66e423b7b1d6e266fd3a7a1c"></div>-->    
                      </div>
                     {% assign omnisend_form_available = true %}
                    {% endif %}
                {% endfor %} 
                <div class="omnisend_form_available" id="omnisend_form_available" data-form="{{ omnisend_form_available }}"></div>
                <!-- End Back in stock -->
            {% if product.variants.size  %}
            <!-- Loop through the variants -->
            {% for variant in product.variants %}
                <ul class="pdp-keywords">
                    <li class="pdp-details lr_pdp_desktop_detail" current_variants_id="{{ variant.id }}" id="variant_detail_{{ variant.id }}">
                      <span class="pdp-link pdp-link-chevron">
                        <span class="pdp-details-click-auto" tabindex="0" onkeydown="if(event.key === 'Enter' || event.key === ' ') this.click();">Details</span>
                      </span>
                    </li>
                 </ul>  
            {% endfor %}
          {% endif %}
            
          <div class="pdp-info-body-tertiary">
            <div class="pdp-info-header-tertiary">
            <div class="pdp-product-variants ">
              <div class="pdp-product-variants-list is-on">
                <div class="pdp-product-variants-list-scroll">
                  <ul id="variant-selector">
                    {% for variant in product.variants %} 
                        <li class="variant_li {% if forloop.first %}is-active selected{% endif %}" data-id="{{ variant.id }}">
                            <a href="javascript:void(0)">
                              {% unless variant.title == "Default Title" %}
                                <div class="variant" name="variant" >{{ variant.title }}</div>               
                                {% else %}
                                <div class="variant" name="variant"></div>     
                              {% endunless %}  
                                <div class="price">{{ variant.price | money }}</div>
                            </a>
                        </li>                          
                      {% endfor %} 
                  </ul>
                </div>
              </div>
            </div>
          </div>
            <div class="pdp-buttons-triangle">
              <img src="{{ 'shape-triangle-1px.svg' | asset_url }}">
            </div>
            <div class="pdp-buttons " id="pdp-button-addtobag">
              <button class="button-addtobag  Xis-disabled" id="add-to-bag">
                <span class="button-addtobag-cta">                    
                  <span class="button-addtobag-cta-title" id="add-to-cart-btn">Add to bag </span>
                  <span class="button-addtobag-cta-price">USD 22.00</span></span>
                <span class="button-addtobag-help">Select a variant</span>
              </button>
            </div>
            <div class="pdp-buttons is-off" id="pdp-button-notifyme">
              <button class="button-italic button-xlarge button-notifyme">Notify me when available</button>
            </div>
          </div>
         </div>
          <div class="pdp-info-body-secondary mobile">
          <div class="pdp-buttons " id="pdp-button-addtobag">
              <button class="button-addtobag  Xis-disabled add-to-cart-on_mobile add-to-cart-btn-mobile" id="add-to-bag">
                <span class="button-addtobag-cta">                    
                  <span class="button-addtobag-cta-title add-to-cart-btn-mobile" id="add-to-cart-btn">Add to bag </span>
                  <span class="button-addtobag-cta-price">USD 22.00</span></span>
                <span class="button-addtobag-help">Select a variant</span>
              </button>
            </div>
          </div>  
        </div>
        <div class="pdp-info-footer">
          <ul class="pdp-keywords pdp-keywords-blank">
            <li class="pdp-storeavailability ">
              <span class="pdp-link pdp-link-chevron"><span>Store availablity</span></span>
            </li>
            <li class="pdp-shipping ">
              <span class="pdp-link pdp-link-chevron"><span>Delivery &amp; returns</span></span>
            </li>
          </ul>
          <ul class="pdp-info-footer-links">
            <li class="pdp-info-footer-links-back ">
              <a href="/woman/outerwear"><span>Back to outerwear</span></a>
            </li>
            <li class="pdp-info-footer-links-assistance"><span>Questions?</span></li>
          </ul>
        </div>
      </div>
    </div>
    <div class="pdp-main-buttons-mobile">
      <div class="pdp-buttons " id="pdp-button-addtobag">
        <button class="button-addtobag  Xis-disabled  ">
          <span class="button-addtobag-cta"
            ><span class="button-addtobag-cta-title">Add to bag</span
            ><span class="button-addtobag-cta-price">USD 22.00</span></span
          ><span class="button-addtobag-help">Select a variant</span>
        </button>
      </div>
      <div class="pdp-buttons is-off" id="pdp-button-notifyme">
        <button class="button-italic button-xlarge button-notifyme">Notify me when available</button>
      </div>
    </div>
  </div>
</div>

{% for variant in product.variants %}
  <div id="model_id_{{ variant.id }}" class="ReactModalPortal ReactModal__Overlay ReactModal__Overlay--before-open overlay overlay-pdp">
    <div id="model_contect_id_{{ variant.id }}" class="ReactModal__Content ReactModal__Content--before-open overlay-panel" tabindex="-1" role="dialog" aria-modal="true">
  	<div class="overlay-close" tabindex="0" onkeydown="if(event.key === 'Enter' || event.key === ' ') this.click();"
><span>×</span></div>
  		<div class="overlay-panel-inner">
  		<div class="overlay-outer-title">Details</div>
  		<div class="panel-content">
            <div class="block">
                <div class="hd">The Book</div>
                <div class="copy">
                    {% if variant.metafields.custom.custom_book_detail != blank %}
                      <ul class="ul-listing">
                          {{ variant.metafields.custom.custom_book_detail | metafield_tag }}
                      </ul>
                    {% else %}
                      <ul class="ul-listing">
                         {{ product.metafields.custom.book_contents | metafield_tag }}
                    </ul>  
                    {% endif %}
                </div>
              </div>
              
  			<div class="block">
  				<div class="hd">The Author</div>
  				<div class="copy">
  					<ul class="ul-listing">
          				{{ product.metafields.custom.author_content | metafield_tag }}
  					</ul>
  				</div>
  			</div>         
  			
            
  			<div class="block" current_variants_id="{{ variant.id }}">
  				<div class="hd">Shipping and Returns</div>
  					<div class="copy">      
  						{% if variant.metafields.custom.custom_shipping_and_returns != blank %}
                              <ul class="ul-listing">     
                                  {{ variant.metafields.custom.custom_shipping_and_returns | metafield_tag }}
                              </ul>
                          
                            {% else %}
                              <ul class="ul-listing">     
                                  {{ product.metafields.custom.shipping_content | metafield_tag }}
                              </ul>
  						{% endif %}             
  					</div>
  				</div> 
  			</div>
  		</div>
  	</div>
  </div> 
{% endfor %}
<!-- PDP Gallery -->
<!-- PhotoSwipe HTML -->
<!-- Root element of PhotoSwipe. Must have class pswp -->
<div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
    <!-- Background of PhotoSwipe. 
         It's a separate element as animating opacity is faster than rgba(). -->
    <div class="pswp__bg"></div>

    <!-- Slides wrapper with overflow:hidden. -->
    <div class="pswp__scroll-wrap">
        <!-- Container that holds slides.
            PhotoSwipe keeps only 3 of them in the DOM to save memory.
            Don't modify these 3 pswp__item elements, data is added later on. -->
        <div class="pswp__container">
              <div class="pswp__item"></div>
        </div>

        <!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. -->
        <div class="pswp__ui pswp__ui--hidden">
            <div class="pswp__top-bar">
                <!-- Controls are self-explanatory. Order can be changed. -->
                <div class="pswp__counter"></div>
                <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>
                <button class="pswp__button pswp__button--share" title="Share"></button>
                <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>
                <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>

                <!-- Preloader -->
                <div class="pswp__preloader">
                    <div class="pswp__preloader__icn">
                        <div class="pswp__preloader__cut">
                            <div class="pswp__preloader__donut"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                <div class="pswp__share-tooltip"></div>
            </div>
            <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)"></button>
            <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)"></button>
            <div class="pswp__caption">
                <div class="pswp__caption__center"></div>
            </div>
        </div>
    </div>
</div>

<!-- PhotoSwipe CSS -->
{{ 'photoswipe.css' | asset_url | stylesheet_tag }}

<!-- PhotoSwipe JS -->
<script type="module">
  import PhotoSwipeLightbox from '{{ 'photoswipe-lightbox.esm.js' | asset_url }}';
  import PhotoSwipe from '{{ 'photoswipe.esm.js' | asset_url }}';

  // Initialize the PhotoSwipe lightbox
  const lightbox = new PhotoSwipeLightbox({
    gallery: '.gallery',          // Target the gallery container
    children: '.pdp-image-set-img',               // Target child <a> elements for each image
    pswpModule: PhotoSwipe,      // The PhotoSwipe module
    bgOpacity: 1,                // Background opacity
    loop: true,                  // Loop through images
    initialZoomLevel: 'fill',    // Initially fit the image to screen
  });

  let clickCount = 0; // Track number of clicks

  lightbox.on('uiRegister', () => {
    const pswp = lightbox.pswp;  // Access the PhotoSwipe instance

    //Handle pointerUp (click or tap) events to control open/close behavior
    pswp.on('pointerUp', (e) => {
     const target = e.originalEvent?.target; // Use originalEvent to access DOM element
    //console.log(target);
      
      //Check if the target exists and is an image element
      if (target && target.tagName === 'IMG') {
        clickCount++; // Increment click count on every image click
        //console.log('Click count:', clickCount);

        if (clickCount === 1) {
          //First click: Close the gallery
          //console.log('First click: Gallery closed.');
          pswp.close(); // Close the gallery
          clickCount = 0; // Reset click count for future interactions
        }
      }
    });
  });
  // Initialize the lightbox
  lightbox.init();
</script>
<!-- END PDP Gallery --> 

<!-- Swiper Js & CSS -->
<script src="{{ 'swiper-bundle-min.js' | asset_url }}" defer></script>
{{ 'swiper-bundle-min.css' | asset_url | stylesheet_tag }}
<script>
document.addEventListener("DOMContentLoaded", function() {
  // Initialize Swiper
  const swiper = new Swiper('.swiper-pdp', {
    slidesPerView: 1,
    spaceBetween: 10,
    loop: true,
    breakpoints: {
      575: { // Breakpoint for mobile devices
        slidesPerView: 1
      },
      320: {
        slidesPerView: 1
      }
    },
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev',
    },
    preventClicks: false, // Allow PhotoSwipe to detect click events
  });
});  
</script>

<!-- Include PhotoSwipe CSS -->
<link rel="stylesheet" href="{{ 'photoswipe.css' | asset_url }}">

<!-- Initialize Swiper and PhotoSwipe -->
<script type='module'>
  // Initialize the PhotoSwipeLightbox
    
  import PhotoSwipeLightbox from '{{ 'photoswipe-lightbox.esm.js' | asset_url }}';
  import PhotoSwipe from '{{ 'photoswipe.esm.js' | asset_url }}';
  const lightbox = new PhotoSwipeLightbox({
    gallerySelector: '.swiper-pdp',  // Swiper wrapper as the gallery
    childSelector: 'a',                  // Target anchor tags for images
    pswpModule: PhotoSwipe,              // Use the UMD PhotoSwipe module
    bgOpacity: 1,                      // Set background opacity for the lightbox
    loop: true,                          // Enable looping through images
    initialZoomLevel: 'fill',    // Initially fit the image to screen
  });
  // Initialize the lightbox
  lightbox.init();
  // Handling custom click-to-close behavior
  let clickCount = 0; // Variable to track clicks
  lightbox.on('uiRegister', function() {
    const pswp = lightbox.pswp; // Access PhotoSwipe instance
    pswp.on('pointerUp', function(e) {
      const target = e.originalEvent?.target; // Target the image element clicked
      if (target && target.tagName === 'IMG') {
        clickCount++; // Increment click count on every image click
        if (clickCount === 1) {
          // First click: Close the gallery
          pswp.close();
          clickCount = 0; // Reset click count
        }
      }
    });
  });
</script>

<!---- Video Start --->
<script>
  window.onload = function() {
    var video = document.getElementById("myVideo");
    video.autoplay = true;
    //video.muted = true; // This is necessary for autoplay to work in some browsers
    video.play();
  };

document.addEventListener('DOMContentLoaded', () => {
    
  // desktop video on click muted and unmuted start "myVideodesktop"
  const videos = document.querySelectorAll('.myVideodesktop');
    // Add a click event listener to each video
    videos.forEach(video => {
      video.addEventListener('click', () => {
        // Toggle the muted property
        video.muted = !video.muted;
      });
    });
  //video on click play end

  document.getElementById('video-overlay').addEventListener('click', function () {
    //alert('Overlay clicked!');
    const video = document.getElementById('lr-custom-mobile-tiktok-atag');
      //window.open(video.href, '_blank'); // Opens video URL in a new tab
    var url = video.href
    const videoId = url.split('/video/')[1].split('?')[0];

    //const deepLink = 'fb://';
    //const fallbackUrl = 'https://www.facebook.com';
    
    // Define the TikTok deep link and fallback URL
    const deepLink = "tiktok://video/"+videoId; // Replace with your video deep link
    //console.log(deepLink);  
    const fallbackUrl = video.href; // Use the original href as the fallback
    //console.log(fallbackUrl);
    
        // Create an invisible iframe to attempt opening the deep link
        const iframe = document.createElement('iframe');
        iframe.style.display = 'none';
        iframe.src = deepLink;
        document.body.appendChild(iframe);

        // If the app doesn't open within 1 second, redirect to the fallback URL
        setTimeout(() => {
            //window.location.href = fallbackUrl;
            window.open(fallbackUrl, '_blank'); // Open fallback URL in a new tab
            document.body.removeChild(iframe); // Clean up the iframe
        }, 1000);
    
  });
 
  //mobile video muted and unmuted "lr-mobile-video"  
    const videosmobile = document.querySelectorAll('.lr-mobile-video');
    // Add event listeners to each video
    videosmobile.forEach(video => {
      // Handle click for toggling mute
      video.addEventListener('click', () => {
        video.muted = !video.muted;
        // Open the video in a new tab
        //window.open("https://www.google.com", "_blank");
      });
    });
  
  
    // Add functionality for Swiper navigation buttons
    const nextButton = document.querySelector('.swiper-button-next');
    const prevButton = document.querySelector('.swiper-button-prev');  
    // Function to mute all videos
    function muteAllVideos() {
      videosmobile.forEach(video => {
        video.muted = true;
        //video.pause(); // Optionally pause the video when navigating
      });
    } 
    //Add click event to Swiper navigation buttons
    if (nextButton) {
      nextButton.addEventListener('click', () => {
        muteAllVideos();
      });
    }    
    if (prevButton) {
      prevButton.addEventListener('click', () => {
        muteAllVideos();
      });
    }
    //mobile video on click muted and unmuted end
});    
</script>
<!---- Video End -->
<script>
  window.productMetafields = {
    {% for item in cart.items %}
      "{{ item.product_id }}": {
        "author_name": "{{ item.product.metafields.custom.author_name }}"
      }{% unless forloop.last %},{% endunless %}
    {% endfor %}
  };
</script>  
<script>
  $(document).ready(function() {

     $('.variant_li').on('click', function() {
        $('.variant_li').removeClass("is-active");
        $('.variant_li').removeClass("selected");
       $(this).addClass("is-active");
       $(this).addClass("selected");
    });

      
    $('.pdp-buttons').on('click', function() {
        // Your existing code logic here
        var selectedVariantId = $('.variant_li.selected').data('id');
        
        // Example AJAX call to add to cart
        if (selectedVariantId) {
            $.ajax({
                type: 'POST',
                url: '/cart/add.js',
                data: {
                    id: selectedVariantId,
                    quantity: 1
                },
                dataType: 'json',
                success: function(response) {
                  updateCartDrawer();  
                },
                error: function(error) {
                    console.error('Error:', error);
                }
            });
        } else {
            //console.log('Please select a variant.');
        }
    });
});

function updateCartDrawer() {
  
    fetch('/cart.js')
      .then(response => response.json())
      .then(cart => {
        var cartDrawerBody = document.querySelector('.cart-drawer-body');
        if (cartDrawerBody) {
        cartDrawerBody.innerHTML = '';
  
        cart.items.forEach((item, index) => {
          const product = item.product;
          const productName = item.product_title;
          let variantName = item.variant_title;
          if (variantName === null || variantName === undefined || variantName.trim() === '') {
              variantName = ''; 
          } else {
              variantName = variantName;
          }
         
          //console.log(productName);
           //var authorName = $('#get_author_name').text();          
           //var authorName = document.getElementById('get_author_name').text();          
           var authorName = window.productMetafields[item.product_id]?.author_name || 'Unknown Author';
          // Use authorName and other details to build the cart item HTML
          //console.log(authorName);
           if(authorName == 'Unknown Author'){
             var authorName_title = $('#get_author_name').text();
             authorName = authorName_title;
           }             
          var cartItem = `  
          <div class="cart-item item item-product item-product-minibag " data-line="${index + 1}">
            <div class="image">
              <a href="${ item.url }">
                <img src="${ item.image }" alt="${ productName }">
              </a>
            </div>
            <div class="info">
              <div class="caption">
                <div class="title">
                  <span class="title-inner">
                   
                    <span class="title-author" author-title="">${ authorName }</span>
                    <span class="title-title">${ productName }</span>
                    <span class="title-type">${ variantName }</span>
                  </span>
                  <span class="title-favorite">Favorite </span>
                </div>
                {% comment %}
                <div class="values"><span class="value-material">${ variantName }</span></div>
                {% endcomment %}
                <div class="tools">
                   <div class="tool tool-quantity">
                      <div class="quantity">× <span class="quantity-value">1</span></div>
                        <div class="quantity-modifiers quantity-controls">
                          <button class="icon-quantity icon-quantity-minus decrease-quantity" data-line="${index + 1}"></button>
                          <span class="icon-quantity icon-quantity-amount quantity_upd">${item.quantity}</span>
                          <button class="icon-quantity icon-quantity-plus increase-quantity" data-line="${index + 1}"></button>
                        </div>
                   </div> 
                    <div class="tool tool-remove">
                        <a href="javascript:void(0)" class="link-remove remove-item" data-line="${index + 1}"><span></span></a>
                    </div>
                </div>
           </div>   
           <div class="price">
            <div class="tools">
              <div class="tool tool-quantity">
                <div class="quantity">× <span class="quantity-value">1</span></div>
                <div class="quantity-modifiers quantity-controls">
                  <button class="icon-quantity icon-quantity-minus decrease-quantity mobile-decrease-quantity" data-line="${index + 1}" tabindex="0" onkeydown="if(event.key === 'Enter' || event.key === ' ') this.click();"
></button>
                  <span class="icon-quantity icon-quantity-amount quantity_upd" id="qty_${ item.id }">${item.quantity}</span>
                  <button class="icon-quantity icon-quantity-plus increase-quantity mobile-increase-quantity" data-line="${index + 1}" tabindex="0" onkeydown="if(event.key === 'Enter' || event.key === ' ') this.click();"
></button>
                </div>
              </div>
            </div>
            <div class="price-amount">1 ×</div>
              <div class="price-price" id="price_${ item.id }">${formatMoney(item.original_line_price, cart.currency)}</div> 
            </div>
           </div>
          </div>`;

          cartDrawerBody.insertAdjacentHTML('beforeend', cartItem);
        });
        
        var totalQuantity = calculateTotalQuantity(cart.items);
        var discount_code;
        if(totalQuantity != 0){
          if (cart.items[0].discounts[0] && cart.items[0].discounts[0].length != "") {
               discount_code = cart.items[0].discounts[0].title; 
               var class_add = '';
               var code_apply = 'is-off';
               var add_disc = '';
          }else{
                discount_code = '';
                var class_add = 'is-off';
                var code_apply = '';
                var add_disc = 'item-total';
          }
        }else{
           discount_code = "";
        }
        
        var cart_footer = ` <div id="cart_footer"> 
            <div class="item item-total item-total-first item-total-promo" id="item-total-promo">
              <div class="caption" id="caption">
                <div class="caption-option promo_label" id="icon-promo-symbol" tabindex="0" onkeydown="if(event.key === 'Enter' || event.key === ' ') this.click();"
><span class="icon-promo" id="icon-promo-text"></span> Add promotion code</div>
                <div class="caption-option promo_input is-off" id="promo_input">
                  <input type="text" id="promo-code-input" placeholder="Enter promotion code" class="input-promo">
                  <button class="button-promo" id="apply-promo-code" tabindex="0" onkeydown="if(event.key === 'Enter' || event.key === ' ') this.click();"
>Apply</button>
                </div>
              </div>
            </div>
            <div class="item item-total item-total-final is-discount ${ class_add }">
              <div class="caption"><span id="promo_code_text">Discount Promo Code : ${ discount_code }</span><span class="note"><div id="discount-message"></div></span></div>
              <button id="remove-discount" class="remove-discount-button"></button>
              <div class="price" id="cart_total_discount"> ${formatMoney(cart.total_discount, cart.currency)}</div>
            </div>
            <div class="item item-total item-total-final">
              <div class="caption">Total <span class="note">Taxes and duties incl.</span></div>
              <div class="price cart-drawer-footer"></div>
            </div>
            <div class="item item-button item-button-sticky item-button-checkout">
              <a class="button button-xlarge button-inverted button-orange" href="/checkout">Checkout</a>
              <button class="button button-xlarge is-off">Continue shopping</button>
            </div>
        </div>
        </div>`;
      
        cartDrawerBody.insertAdjacentHTML('beforeend', cart_footer);

        var cart_empty_message = `<div class="nav-layout" id="cart-empty-message" style="display: none;">  
                    <a href="/collections/all" class="button">Continue shopping</a>   
        </div>`;

        cartDrawerBody.insertAdjacentHTML('beforeend', cart_empty_message);
      
        document.querySelector('.cart-drawer-footer').textContent = `${formatMoney(cart.total_price, cart.currency)}`;
        var totalQuantity = calculateTotalQuantity(cart.items);
        document.getElementById('total-quantity').textContent = totalQuantity;
        var totalCartQuantityElement = document.getElementById('total-cart-quantity');
        totalCartQuantityElement.textContent = totalQuantity;
        var totalCartQuantityElementMobile = document.getElementById('total-quantity');  
        totalCartQuantityElementMobile.textContent = totalQuantity; 
          
        if(totalQuantity == 0){  
          document.getElementById('cart_footer').style.display = 'none';
          document.getElementById('cart-empty-message').style.display = 'flex';

          // Remove Promo code
          const removeDiscountButton = document.getElementById("remove-discount");
          if (removeDiscountButton) {
            // Automatically trigger a click on the button
            removeDiscountButton.click();
          } else {
            console.error("Element with ID 'remove-discount' not found.");
          }
          
        } 
       }
        //$("#nav-bag").addClass('is-on');
        attachCartItemEvents();  
    
      });
  }

  function attachCartItemEvents() {
    var increaseButtons = document.querySelectorAll('.increase-quantity');
    var decreaseButtons = document.querySelectorAll('.decrease-quantity');
    var removeButtons = document.querySelectorAll('.remove-item');
        
    increaseButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        updateCartItemQuantity(button.dataset.line, 1);
      });
    });

    decreaseButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        updateCartItemQuantity(button.dataset.line, -1);
      });
    });

    removeButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        removeCartItem(button.dataset.line);
      });
    });

  }

  function updateCartItemQuantity(line, delta) {
    var quantityElement = document.querySelector(`.cart-item[data-line="${line}"] .quantity_upd`);
    //console.log(quantityElement);
    var newQuantity = parseInt(quantityElement.textContent) + delta;
    
    if (newQuantity < 1) {
      removeCartItem(line);
    } else {
      fetch('/cart/change.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({ line: parseInt(line), quantity: newQuantity })
      })
      .then(response => response.json())
      .then(cart => {
        //updateCartDrawer();
        // Update the quantity
        //console.log(cart);
        quantityElement.textContent = newQuantity;

        // Get the specific item based on the line number
        var cartItem = cart.items[line - 1];  // line is 1-indexed
        //console.log(cartItem);
        
        // Update the price for the specific item qty
        var itemPriceElement = document.querySelector(`#qty_${cartItem.id}`);
        if (itemPriceElement) {
          itemPriceElement.textContent = cartItem.quantity;
        }
        
        // Update the price for the specific item price
        var itemPriceElement = document.querySelector(`#price_${cartItem.id}`);
        if (itemPriceElement) {
          itemPriceElement.textContent = formatMoney(cartItem.original_line_price, cart.currency);
        }
        //console.log(cart);
         quantityElement.textContent = newQuantity;
         var cart_total_price_value = cart.original_total_price - cart.total_discount;   
         document.querySelector('#cart_total_discount').textContent = formatMoney(cart.total_discount, cart.currency);
         document.querySelector('.cart-drawer-footer').textContent = formatMoney(cart_total_price_value, cart.currency);
         var totalCartQuantityElement = document.getElementById('total-cart-quantity');
         totalCartQuantityElement.textContent = calculateTotalQuantity(cart.items);
         var totalCartQuantityElementMobile = document.getElementById('total-quantity');
         totalCartQuantityElementMobile.textContent = calculateTotalQuantity(cart.items);
      });
    }
  }

  function removeCartItem(line) {
    fetch('/cart/change.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
      body: JSON.stringify({ line: parseInt(line), quantity: 0 })
    })
    .then(response => response.json())
    .then(cart => {
      //console.log(cart);
      //updateCartDrawer();
        document.querySelector(`.cart-item[data-line="${line}"]`).remove();
        const remainingItemsDrover = document.querySelectorAll('.cart-item');
        remainingItemsDrover.forEach((item, index) => {
            //item.setAttribute('data-line', index + 1); // Shopify uses 1-based line numbers
            const newLine = index + 1;
            item.setAttribute('data-line', newLine);

            // Update the corresponding remove link if it exists
            const removeLinkDrover = item.querySelector('.remove-item');
            if (removeLinkDrover) {
                removeLinkDrover.setAttribute('data-line', newLine);
            }
            // Update the corresponding decrease link if it exists
            const decreaseLinkDrover = item.querySelector('.decrease-quantity');
            if (decreaseLinkDrover) {
                decreaseLinkDrover.setAttribute('data-line', newLine);
            }

          // Update the corresponding increaseDrover link if it exists
            const increaseDrover = item.querySelector('.increase-quantity');
            if (increaseDrover) {
                increaseDrover.setAttribute('data-line', newLine);
            }
          
            //mobile
            const decreaseLinkDroverMobile = item.querySelector('.mobile-decrease-quantity');
            if (decreaseLinkDroverMobile) {
                decreaseLinkDroverMobile.setAttribute('data-line', newLine);
            }

          // Update the corresponding increaseDrover link if it exists
            const increaseDroverMobile = item.querySelector('.mobile-increase-quantity');
            if (increaseDroverMobile) {
                increaseDroverMobile.setAttribute('data-line', newLine);
            }
        });
        var cart_total_price_value = cart.original_total_price - cart.total_discount;
        document.querySelector('#cart_total_discount').textContent = formatMoney(cart.total_discount, cart.currency);
        document.querySelector('.cart-drawer-footer').textContent = formatMoney(cart_total_price_value, cart.currency);
        var totalCartQuantityElement = document.getElementById('total-cart-quantity');
        var totalCartQuantityElementMobile = document.getElementById('total-quantity');
        
        totalCartQuantityElement.textContent = calculateTotalQuantity(cart.items);
        totalCartQuantityElementMobile.textContent = calculateTotalQuantity(cart.items);

        if (cart.item_count == 0) {
            document.getElementById('cart_footer').style.display = 'none';
            document.getElementById('cart-empty-message').style.display = 'flex';

          // Remove Promo code
          const removeDiscountButton = document.getElementById("remove-discount");
          if (removeDiscountButton) {
            // Automatically trigger a click on the button
            removeDiscountButton.click();
          } else {
            console.error("Element with ID 'remove-discount' not found.");
          }
          
        }        
    });
  }
    function formatMoney(cents, currency) {
      let money = (cents / 100).toFixed(2);
      switch (currency) {
        case 'USD':
          return `$${money}`;
        case 'EUR':
          return `€${money}`;
        case 'GBP':
          return `£${money}`;
        // Add more currency cases as needed
        default:
          return `${money} ${currency}`;
      }
  }

  function calculateTotalQuantity(items) {
    return items.reduce((total, item) => total + item.quantity, 0);
  }

  document.addEventListener('cart:updated', updateCartDrawer);
  // Call updateCartDrawer initially to load the cart contents
  updateCartDrawer();

    $('#add-to-bag').on('click', function() {
      //var spanElement = document.getElementById('total-cart-quantity');
      //var textValue = spanElement.textContent;
      //if(textValue > 0){
       setTimeout(() => {
         $("#nav-bag").addClass('is-on');
      }, 1000);
      //}       
   });

  $('.add-to-cart-on_mobile').on('click', function() {
     setTimeout(() => {
       $("#nav-bag").addClass('is-on-mobile'); 
       $(".header-mobile").addClass('is-off');
       $(".header-background").addClass('is-on');
       $(".header-close-button").addClass('is-on');
    }, 1200);
  });  
  
</script>
<script>  

  
function updateWindowHeight() { 
  const windowWidth = window.innerWidth;
  //console.log(windowWidth);  
  //var omni_height = 150;
   if (windowWidth > 580 ) {
    // Get the first element with the class "omnisend_height"
     const variantLiCount = document.querySelectorAll('.variant_li').length;
     //alert(variantLiCount);
     if(variantLiCount == 1){
       var add_pad = 70;
     }else if(variantLiCount == 3){
        var add_pad = 20;
     }else{
        var add_pad = 0;
     }
     //alert(add_pad);
    const windowHeight = window.innerHeight; // Get window height
    document.documentElement.style.setProperty('--window-height', `${windowHeight}px`);
    //console.log("window height:",windowHeight);
    const element = document.querySelector('.pdp-info-body-secondary-get-height'); // Replace with your element's selector
    const elementHeight = element.offsetHeight;  
    //console.log('Element height:', elementHeight);
    //var elementHeight_new = elementHeight + 72 + 70 + 30 + 15;
    var elementHeight_new = elementHeight + 54 + 60 + add_pad;
    var new_height = windowHeight - elementHeight_new;
    //console.log('new height:', new_height);
      const elements = document.querySelectorAll('.pdp-info-header-secondary'); // Returns a NodeList
      const sideBar = document.getElementById("side-bar");
     var pad = 0;
     if(variantLiCount == 1){
       var add_pad = 0;
     }else if(variantLiCount == 2){
        var add_pad = +16;
     }else if(variantLiCount == 3){
        var add_pad = 0;
     }else{
        var add_pad = -16;
     }
      new_height_omnisend = windowHeight - elementHeight - 54 - 70 - 10 - add_pad;
      //console.log(new_height_omnisend);
      elements.forEach((element) => {
        element.style.maxHeight = `${new_height}px`; // Apply the height to each element
        
        sideBar.setAttribute("data-height", new_height_omnisend);
        
      });
    }
}
// Call on page load and whenever the window resizes
  updateWindowHeight(); // Initial call
  window.addEventListener('resize', updateWindowHeight); // Update on window resize

  window.onload = function () {
  //console.log('on load');
  setTimeout(function () {
    const element = document.querySelector("#omnisend_height"); // Replace with your element's ID or selector
    if (element) {     
      const verientStock = document.getElementById("check-verient-stock");
      const verientStock_value = verientStock.getAttribute("data-available");
      //console.log("verientStock_value",verientStock_value);
      const form_available = document.getElementById("omnisend_form_available");
      const dataForm = form_available.getAttribute("data-form");
      //console.log("form_available",dataForm);
      
      if (verientStock_value === 'true' && dataForm === 'true') {

        const selectedElement = document.querySelector('.selected');
        // Check if the element exists and get its 'data-id' attribute
        if (selectedElement) {
          const variantId = selectedElement.getAttribute('data-id');
          //console.log('Selected Element Data ID:', variantId);
          const url = new URL(window.location.href);
          // Add or update the `variant` parameter in the URL
          url.searchParams.set('variant', variantId);
          // Update the browser URL without reloading the page
          window.history.replaceState({}, '', url.toString());
              
        } else {
          //console.log('No element with the "selected" class found.');
        }
        
        //var omni_height = element.offsetHeight;
        //console.log("Element height:", omni_height);
        var omni_height = 76;
        const scroll_elements = document.querySelectorAll('.pdp-info-header-secondary');
         if (scroll_elements.length > 0) {
         let maxHeight = 0;
         scroll_elements.forEach((element) => {
          const height = element.offsetHeight; // Get the height of each element
          if (height > maxHeight) {
            maxHeight = height; // Update maxHeight if current element's height is larger
          }
        });
        const sideBar = document.getElementById("side-bar");
        const dataHeight = sideBar.getAttribute("data-height");
        const new_info_height = dataHeight - omni_height;
        //console.log('new_height', new_info_height);
        const elements = document.querySelectorAll('.pdp-info-header-secondary'); // Returns a NodeList
        //setTimeout(function () { 
        elements.forEach((element) => {
           element.style.maxHeight = `${new_info_height}px`; // Apply the height to each element
        });   
        //element.style.visibility = "visible";   
        //console.log("Maximum height:", maxHeight);
       }   
     }
    } else {
      //console.log("Element not found");
    }
    //element.style.display = "block";
    }, 5000); // Delay of 5000ms (5 seconds)
  };

  $('.variant_li').on('click', function() { 
    //updateWindowHeight();                                       
    // dev store
    const element = document.getElementById("omnisend-embedded-v2-677e509aef3ff98a1103c138");
    // staging store
    //const element = document.getElementById("omnisend-embedded-v2-677e50a3622d57947244e294");
    //production store
    //const element = document.getElementById("omnisend-embedded-v2-66e423b7b1d6e266fd3a7a1c");
   setTimeout(function () {
    if (element) {
      //const isHidden = getComputedStyle(element).display === "none"; // Check if the element is hidden
      //const style = window.getComputedStyle(element);
      //const isHidden = style.display === "none" || style.visibility === "hidden" || element.offsetHeight === 0;
      //console.log(isHidden);
      const verientStock = document.getElementById("check-verient-stock");
      const verientStock_value = verientStock.getAttribute("data-available");
      //console.log("verientStock_value",verientStock_value);
      const form_available = document.getElementById("omnisend_form_available");
      const dataForm = form_available.getAttribute("data-form");
      //console.log("form_available",dataForm);
      
      if (verientStock_value === 'true' && dataForm === 'true') {      
        //console.log("The element is visible.");       
        // Perform actions for hidden element (e.g., setting height to 0 or other logic)
        //element.style.height = "0px"; // Optional: explicitly set height to 0
         const element = document.querySelector("#omnisend_height"); // Replace with your element's ID or selector
         if (element) {
          var omni_height = 76;
          //console.log("Element height:", omni_height);
          const sideBar = document.getElementById("side-bar");
          const dataHeight = sideBar.getAttribute("data-height");
          //console.log(dataHeight); 
          const new_info_height = dataHeight - omni_height;
          //console.log('new_height', new_info_height);
          const elements = document.querySelectorAll('.pdp-info-header-secondary'); // Returns a NodeList
          elements.forEach((element) => {
            element.style.maxHeight = `${new_info_height}px`; // Apply the height to each element
          }); 
        }   
      } else {
        //console.log("The element is hidden (display: none).");
        //const height = element.offsetHeight; // Get the height if it's visible
        //console.log("Visible element height:", height);
        // Perform actions for visible element
        const sideBar = document.getElementById("side-bar");
        const dataHeight = sideBar.getAttribute("data-height");
        //console.log('new_height', dataHeight);
        const elements = document.querySelectorAll('.pdp-info-header-secondary'); // Returns a NodeList
          elements.forEach((element) => {
            element.style.maxHeight = `${dataHeight}px`; // Apply the height to each element
          });
                
      }
    } else {
      //console.log("Element not found.");
    }
   }, 1000); // Delay of 5000ms (5 seconds)  
});  
  
</script>
{% schema %}
{
  "name": "Custom Product Page",
  "settings": [

  ]
}
{% endschema %}
