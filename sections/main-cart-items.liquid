{{ 'lr-widget-dts.css' | asset_url | stylesheet_tag }}
{{ 'lr-swiper-components.css' | asset_url | stylesheet_tag }}
<script src="{{ 'lr-widget-dts.js' | asset_url }}" defer="defer"></script>
<div class="plp-header">
  <div class="plp-header-primary">
    <div class="widget-dts">
      <div class="widget-dts-text widget-dts-text-ghost">Shopping Bag</div>
      <!-- Foreground Text -->
      <div id="foreground" class="widget-dts-text">Shopping Bag</div>    
      <!-- Middleground Text -->
      <div id="middleground" class="widget-dts-text">Shopping Bag</div>    
      <!-- Background Text -->
      <div id="background" class="widget-dts-text">Shopping Bag</div>
    </div>
  </div>
</div>
{{ 'lr-custom-cart.css' | asset_url | stylesheet_tag }}
<div class="page-bag">
     <div class="inner">
        <div class="site-system site-system-minibag cart-drawer-body">
      {%- for item in cart.items -%}
        <div class="cart-item-page item item-product item-product-minibag" data-line="{{ forloop.index }}">
         {% if item.image %}  
        <div class="image">
          <a href="{{ item.url }}">
            <img src="{{ item.image | img_url:'master' }}" alt="{{ item.image.alt | escape }}">
          </a>
        </div>
        {% endif %}   
        <div class="info">
          <div class="caption">
            <div class="title">
              <span class="title-inner">
                 {% assign author_name = item.product.metafields.custom.author_name %}
                <span class="title-author" id="author_name_{{ item.id }}">{{ author_name }}</span>
                <span class="title-title">{{ item.product.title | escape }}</span>
              </span>
              <span class="title-favorite">Favorite </span>
            </div>
            
            <div class="values"><span class="value-material">{{ item.variant.title }}</span></div>
            <div class="tools">
              <div class="tool tool-quantity">
                <div class="quantity">× <span class="quantity-value">1</span></div>
                <div class="quantity-modifiers quantity-controls">
                  <button class="icon-quantity icon-quantity-minus decrease-quantity" data-line="{{ forloop.index }}"></button>
                  <span class="icon-quantity icon-quantity-amount quantity_upd_cart_page_mobile" id="qty_{{  item.id }}">{{item.quantity}}</span>
                  <button class="icon-quantity icon-quantity-plus increase-quantity" data-line="{{ forloop.index }}"></button>
                </div>
              </div>
              <div class="tool tool-remove">
                {% comment %}
                <button class="link-remove remove-item" data-line="{{ forloop.index }}"><span>remove</span></button>
                {% endcomment %}
                <a href="javascript:void(0)" class="link-remove cart-page-remove-item" data-line="{{ forloop.index }}"><span></span></a>
              </div>
            </div>
          </div>
          <div class="price">
            <div class="tools">
              <div class="tool tool-quantity">
                <div class="quantity">× <span class="quantity-value">1</span></div>
                <div class="quantity-modifiers quantity-controls">
                  <button class="icon-quantity icon-quantity-minus decrease-quantity" data-line="{{ forloop.index }}"></button>
                  <span class="icon-quantity icon-quantity-amount quantity_upd_cart_page" id="qty_{{ item.id }}">{{item.quantity}}</span>
                  <button class="icon-quantity icon-quantity-plus increase-quantity" data-line="{{ forloop.index }}"></button>
                </div>
              </div>
            </div>
            <div class="price-amount">1 ×</div>
            <div class="price-price price_cart_page_diiv_{{ item.id }}">{{ item.original_line_price | money }}</div> 
          </div>
        </div>  
      </div>
      {% endfor %}
 
        {%- assign totalQuantity = cart.item_count -%}
        {%- assign discount_code = "" -%}
        {%- assign class_add = "is-off" -%}
        {%- assign code_apply = "" -%}
        {%- assign add_disc = "item-total" -%}

        {%- assign cusnti_shop = "flex;" -%}
        {%- assign cusnti_cart_footer = "none;" -%}  
        {%- if totalQuantity > 0 -%}
          {%- assign cusnti_shop = "none;" -%}
          {%- assign cusnti_cart_footer = "block;" -%}
          
          {%- assign first_item = cart.items[0] -%}        
          {%- if first_item.discounts.size > 0 -%}
            {%- assign discount_code = first_item.discounts[0].title -%}
            {%- assign class_add = "" -%}
            {%- assign code_apply = "is-off" -%}
            {%- assign add_disc = "" -%}
          {%- endif -%}
       {%- endif -%}
      <div id="cart_page_footer" style="display:{{ cusnti_cart_footer }}">
        <div class="cart-item item {{ add_disc }} item-total-first item-total-promo" id="item-total-promo">
           <div class="caption_cust {{ code_apply }}" id="caption">
             <div class="caption-option promo_label" id="icon-promo-symbol"><span class="icon-promo" id="icon-promo-text"></span> Add promotion code</div>
             <div class="caption-option promo_input is-off" id="promo_input">
                    <input type="email" id="cart-page-promo-code-input" placeholder="Enter promotion code" class="input-promo" style="outline: none;">
                    <button class="button-promo" id="apply-promo-code">Ok</button>
              </div>
            </div>
        </div>
        <div class="item item-total item-total-final is-discount {{ class_add }}">
          <div class="caption_cust"><span id="promo_code_text" class="cart-page-promo_code_text">Discount Promo Code : {{ cart.items[0].discounts[0].title }}</span><span class="note"><div id="discount-message"></div></span></div>
          <button id="remove-discount" class="remove-discount-button"></button>
          <div class="price cart-page-cart_total_discount" id="cart_total_discount">{{ cart.total_discount | money }}</div>
        </div>
        <div class="item item-total item-total-final">
          <div class="caption_cust">Total <span class="note">Taxes and duties incl.</span></div>
          <div class="price cart-page-drawer-footer">{{ cart.total_price | money_with_currency }}</div>
        </div>
        <div class="item item-button item-button-sticky item-button-checkout">
          <a class="button button-xlarge button-inverted button-orange" href="/checkout">Checkout</a>
          <button class="button button-xlarge is-off">Continue shopping</button>
        </div>
      </div>  
          
      <div class="nav-layout" id="cart-page-empty-message" style="display:{{ cusnti_shop }}">  
          <a href="/collections/all" class="button">Continue shopping</a>   
      </div>
       
    </div>       
    </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script type="text/javascript">
  //cart drower
document.addEventListener('DOMContentLoaded', function() { 
  
  var totalCartQuantityElement = document.getElementById('total-cart-quantity');
  
  document.addEventListener('click', function(event) { 

  //promo code input open
   if (event.target && event.target.id === 'icon-promo-text') {
    jQuery(".promo_input").removeClass('is-off');
    jQuery(".promo_label").addClass('is-off');
   }

  if (event.target && event.target.id === 'icon-promo-symbol') {
    jQuery(".promo_input").removeClass('is-off');
    jQuery(".promo_label").addClass('is-off');
   }
    
    //apply prommo code 
    if (event.target && event.target.id === 'apply-promo-code') {
      var discountCode = document.getElementById('cart-page-promo-code-input').value;
      if (discountCode === '') {
        document.getElementById('discount-message').innerText = 'Please enter a discount code.';
        return;
      }
      fetch('/discount/' + discountCode, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        }
      })
      .then(response => { 
       if (response.ok) { 
          //console.log(cart)
          document.getElementById('discount-message').innerText = 'Discount applied!';
          jQuery(".is-discount").removeClass('is-off');
          // Optionally, you could refresh the cart to show updated totals
          //updateCartDrawer();
          return fetch('/cart.js');
        } else {
          document.getElementById('discount-message').innerText = 'Invalid discount code.';
          //return null;
        }
      })
      .then(response => response.json())
      .then(cart => {
        //updateCartDrawer(cart);
        // Log the latest cart data
        if (cart.items[0].discounts[0] && cart.items[0].discounts[0].length != "") { 
          // Update the cart UI with the latest data
          document.querySelector('#cart_total_discount').textContent = `${formatMoney(cart.total_discount, cart.currency)}`;
          document.querySelector('.cart-page-cart_total_discount').textContent = `${formatMoney(cart.total_discount, cart.currency)}`;
          document.querySelector('.cart-drawer-footer').textContent = `${formatMoney(cart.total_price, cart.currency)}`;
          document.querySelector('.cart-page-drawer-footer').textContent = `${formatMoney(cart.total_price, cart.currency)}`;
          document.getElementById('caption').style.display = 'none';
          jQuery(".item-total-promo").hide(); 
          document.getElementById('discount-message').style.display = 'none';
          jQuery(".is-discount").show();
          jQuery("#item-total-promo").removeClass('item-total');
          discount_code = cart.items[0].discounts[0].title;
          document.querySelector('#promo_code_text').textContent = 'Discount Promo Code :'+discount_code;
          document.querySelector('.cart-page-promo_code_text').textContent = 'Discount Promo Code :'+discount_code;
        }else{
          document.getElementById('discount-message').style.display = 'block';
          document.querySelector('#promo_code_text').textContent = 'Discount Promo Code :';
          document.getElementById('discount-message').innerText = 'Wrong Discount applied!';
          jQuery(".is-discount").show();
          jQuery(".is-discount").removeClass('is-off');
        }
      })
      .catch(error => {
        console.error('Error applying discount code:', error);
        document.getElementById('discount-message').innerText = 'Something went wrong. Please try again.';
      });
      //End apply promo code
    }

    if (event.target && event.target.id === 'remove-discount') {

     fetch('/discount/' + discountCode, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        }
      })
      .then( response => { //console.log(cart);
        if (response.ok) {
          document.getElementById('discount-message').innerText = 'Discount code removed';
           return fetch('/cart.js');
          // Optionally, you could refresh the cart to show updated totals
          //updateCartDrawer();
        } else {
          document.getElementById('discount-message').innerText = 'Invalid discount code.';
        }
      })
      .then(response => response.json())
      .then(cart => {
        //updateCartDrawer(cart);
        //console.log(cart); // Log the latest cart data
        // Update the cart UI with the latest data
        document.querySelector('#cart_total_discount').textContent = formatMoney(cart.total_discount, cart.currency);
        document.querySelector('.cart-page-cart_total_discount').textContent = formatMoney(cart.total_discount, cart.currency);
        document.querySelector('.cart-drawer-footer').textContent = `${formatMoney(cart.total_price, cart.currency)}`;
        document.querySelector('.cart-page-drawer-footer').textContent = `${formatMoney(cart.total_price, cart.currency)}`;
        jQuery("#promo_code_text").textContent = "";
        jQuery("#item-total-promo").addClass('item-total');
        jQuery(".item-total-promo").show();
        jQuery(".is-discount").hide();
        jQuery("#caption").removeClass('is-off');
        jQuery("caption_cust").removeClass('is-off');
        jQuery("#caption").show();
        jQuery(".promo_label").removeClass('is-off'); 
          
        jQuery("#icon-promo-symbol").removeClass('is-off');
        jQuery("#promo_input").addClass('is-off');
        jQuery(".promo_input").addClass('is-off');
        
        
      })
      .catch(error => {
        console.error('Error applying discount code:', error);
        document.getElementById('discount-message').innerText = 'Something went wrong. Please try again.';
      });      
  }
    
});

  function updateCartDrawer() {
    fetch('/cart.js')
      .then(response => response.json())
      .then(cart => {
        var cartDrawerBody = document.querySelector('.cart-drawer-body');
         if (cartDrawerBody) {
        cartDrawerBody.innerHTML = '';
  
        cart.items.forEach((item, index) => {
          const product = item.product;
          const productName = item.product_title;
          let variantName = item.variant_title;
          if (variantName === null || variantName === undefined || variantName.trim() === '') {
              variantName = ''; 
          } else {
              variantName = variantName;
          }
          //console.log(productName);
           var authorName = window.productMetafields[item.product_id]?.author_name || 'Unknown Author';
          // Use authorName and other details to build the cart item HTML
          //console.log(authorName);
          if(authorName == 'Unknown Author'){
             var authorName_title = $('#get_author_name').text();
             authorName = authorName_title;
           }              
          var cartItem = `  
          <div class="cart-item item item-product item-product-minibag " data-line="${index + 1}">
            <div class="image">
              <a href="${ item.url }">
                <img src="${ item.image }" alt="${ productName }">
              </a>
            </div>
            <div class="info">
              <div class="caption">
                <div class="title">
                  <span class="title-inner">
                   
                    <span class="title-author" author-title="">${ authorName }</span>
                    <span class="title-title">${ productName }</span>
                  </span>
                  <span class="title-favorite">Favorite </span>
                </div>
                <div class="values"><span class="value-material">${ variantName }</span></div>
                <div class="tools">
                   <div class="tool tool-quantity">
                      <div class="quantity">× <span class="quantity-value">1</span></div>
                        <div class="quantity-modifiers quantity-controls">
                          <button class="icon-quantity icon-quantity-minus decrease-quantity" data-line="${index + 1}"></button>
                          <span class="icon-quantity icon-quantity-amount quantity_upd">${item.quantity}</span>
                          <button class="icon-quantity icon-quantity-plus increase-quantity" data-line="${index + 1}"></button>
                        </div>
                   </div> 
                    <div class="tool tool-remove">
                        <a href="javascript:void(0)" class="link-remove remove-item" data-line="${index + 1}"><span></span></a>
                    </div>
                </div>
           </div>   
           <div class="price">
            <div class="tools">
              <div class="tool tool-quantity">
                <div class="quantity">× <span class="quantity-value">1</span></div>
                <div class="quantity-modifiers quantity-controls">
                  <button class="icon-quantity icon-quantity-minus decrease-quantity" data-line="${index + 1}"></button>
                  <span class="icon-quantity icon-quantity-amount quantity_upd" id="qty_${ item.id }">${item.quantity}</span>
                  <button class="icon-quantity icon-quantity-plus increase-quantity" data-line="${index + 1}"></button>
                </div>
              </div>
            </div>
            <div class="price-amount">1 ×</div>
              <div class="price-price price_cart_page_${ item.id }" >${formatMoney(item.original_line_price, cart.currency)}</div> 
            </div>
           </div>
          </div>`;

          cartDrawerBody.insertAdjacentHTML('beforeend', cartItem);
        });
        
        var totalQuantity = cart_pege_calculateTotalQuantity(cart.items);
        var discount_code;
        if(totalQuantity != 0){
          if (cart.items[0].discounts[0] && cart.items[0].discounts[0].length != "") {
               discount_code = cart.items[0].discounts[0].title; 
               var class_add = '';
               var code_apply = 'is-off';
               var add_disc = '';
          }else{
                discount_code = '';
                var class_add = 'is-off';
                var code_apply = '';
                 var add_disc = 'item-total';
          }
        }else{
           discount_code = "";
        }
        
        var cart_footer = ` <div id="cart_footer"> 
              <div class="item ${add_disc} item-total-first item-total-promo" id="item-total-promo">
                <div class="caption ${code_apply}" id="caption">
                  <div class="caption-option promo_label" id="icon-promo-symbol"><span class="icon-promo" id="icon-promo-text"></span> Add promotion code</div>
                  <div class="caption-option promo_input is-off" id="promo_input">
                    <input type="email" id="promo-code-input" placeholder="Enter promotion code" class="input-promo" style="outline: none;">
                    <button class="button-promo" id="apply-promo-code">Ok</button>
                  </div>
                </div>
            </div>
            <div class="item item-total item-total-final is-discount ${ class_add }">
              <div class="caption"><span id="promo_code_text">Discount Promo Code : ${ discount_code }</span><span class="note"><div id="discount-message"></div></span></div>
              <button id="remove-discount" class="remove-discount-button"></button>
              <div class="price" id="cart_total_discount"> ${formatMoney(cart.total_discount, cart.currency)}</div>
            </div>
            <div class="item item-total item-total-final">
              <div class="caption">Total <span class="note">Taxes and duties incl.</span></div>
              <div class="price cart-drawer-footer"></div>
            </div>
            <div class="item item-button item-button-sticky item-button-checkout">
              <a class="button button-xlarge button-inverted button-orange" href="/checkout">Checkout</a>
              <button class="button button-xlarge is-off">Continue shopping</button>
            </div>
        </div>
        </div>`;
      
        cartDrawerBody.insertAdjacentHTML('beforeend', cart_footer);

        var cart_empty_message = `<div class="nav-layout" id="cart-empty-message" style="display: none;">  
                    <a href="/collections/all" class="button">Continue </a>   
        </div>`;

        cartDrawerBody.insertAdjacentHTML('beforeend', cart_empty_message);
        
        document.querySelector('.cart-drawer-footer').textContent = `${formatMoney(cart.total_price, cart.currency)}`;
        var totalQuantity = cart_pege_calculateTotalQuantity(cart.items);
        document.getElementById('total-quantity').textContent = totalQuantity;
        totalCartQuantityElement.textContent = totalQuantity;
        if(totalQuantity == 0){  
          document.getElementById('cart_footer').style.display = 'none';
          document.getElementById('cart-empty-message').style.display = 'flex';
        }
        }      
        attachCartItemEvents();   
      });
  }

  function attachCartItemEvents() { 
    var increaseButtons = document.querySelectorAll('.increase-quantity');
    var decreaseButtons = document.querySelectorAll('.decrease-quantity');
    var removeButtons = document.querySelectorAll('.remove-item');
    var removeButtonsCartPage = document.querySelectorAll('.cart-page-remove-item');
    
    increaseButtons.forEach(button => {
      button.addEventListener('click', function(e) { 
        e.preventDefault();
        updateCartItemQuantity(button.dataset.line, 1);
      });
    });

    decreaseButtons.forEach(button => {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        updateCartItemQuantity(button.dataset.line, -1);
      });
    });

    removeButtons.forEach(button => { 
      button.addEventListener('click', function(e) {
        e.preventDefault();
        removeCartItemCartPage(button.dataset.line);        
      });
    });
    
    removeButtonsCartPage.forEach(button => { 
      button.addEventListener('click', function(e) {
        e.preventDefault();
        removeCartItemCartPage(button.dataset.line);        
      });
    });
  }

  function updateCartItemQuantity(line, delta) {
    var quantityElement = document.querySelector(`.cart-item[data-line="${line}"] .quantity_upd`);
    //var quantityElementCartPage = document.querySelector(`.cart-item[data-line="${line}"] .quantity_upd_cart_page`);

    var newQuantity = parseInt(quantityElement.textContent) + delta;
    //var cartpagenewQuantity = parseInt(quantityElementCartPage.textContent) + delta;
    
    if (newQuantity < 1) {
      removeCartItem(line);
      //removeCartItemPage(line);
    } else {
      fetch('/cart/change.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify({ line: parseInt(line), quantity: newQuantity })
      })
      .then(response => response.json())
      .then( cart => {
        //updateCartDrawer();
        // Update the quantity
        //console.log(cart);
        quantityElement.textContent = newQuantity;
        //quantityElementCartPage.textContent = cartpagenewQuantity;
        // Get the specific item based on the line number
        var cartItem = cart.items[line - 1];  // line is 1-indexed
        //console.log(cartItem);
        
        // Update the price for the specific item qty
        var itemPriceElement = document.querySelector(`#qty_${cartItem.id}`);
        if (itemPriceElement) {
          itemPriceElement.textContent = cartItem.quantity;
        }
        
        // Update the price for the specific item price
        var itemPriceElement = document.querySelector(`#price_${cartItem.id}`);
        if (itemPriceElement) {
          itemPriceElement.textContent = formatMoney(cartItem.original_line_price, cart.currency);
        }
        //console.log(cart);
         quantityElement.textContent = newQuantity;
         var cart_total_price_value = cart.original_total_price - cart.total_discount;
         document.querySelector('#cart_total_discount').textContent = formatMoney(cart.total_discount, cart.currency);
         document.querySelector('.cart-drawer-footer').textContent = formatMoney(cart_total_price_value, cart.currency);
         totalCartQuantityElement.textContent = cart_pege_calculateTotalQuantity(cart.items);

         // Update other cart elements if needed
        updateCartPage(cart);
        
      });
    }
  }

  function updateCartPage(cart) {
    cart.items.forEach((item, index) => {
      // Find each cart item on the cart page based on its line number
      var cartPageItem = document.querySelector(`.cart-item-page[data-line="${index + 1}"]`);
      var cartItem = item;  // line is 1-indexed
     //console.log(item);   
      // Only proceed if cartPageItem exists in the DOM
      if (cartPageItem) { 
        // Safely update the quantity if the element exists
        var quantityElementCartPage = cartPageItem.querySelector('.quantity_upd_cart_page');
        var quantityElementCartPage_mobile = cartPageItem.querySelector('.quantity_upd_cart_page_mobile');
        
        if (quantityElementCartPage) { 
          quantityElementCartPage.textContent = item.quantity;                             
        }

        if (quantityElementCartPage_mobile) { 
          quantityElementCartPage_mobile.textContent = item.quantity;                                
        }

        // Update the price for the specific item price
        var itemPriceElement = document.querySelector(`.price_cart_page_${item.id}`);
        var itemPriceElement_div = document.querySelector(`.price_cart_page_diiv_${item.id}`);
        
        if (itemPriceElement) {
          itemPriceElement.textContent = formatMoney(cartItem.original_line_price, cart.currency);
          itemPriceElement_div.textContent = formatMoney(cartItem.original_line_price, cart.currency); 
        }

        var cart_total_price_value = cart.original_total_price - cart.total_discount;
        //console.log(cart_total_price_value)
        document.querySelector('.cart-page-cart_total_discount').textContent = formatMoney(cart.total_discount, cart.currency);
        document.querySelector('.cart-page-drawer-footer').textContent = formatMoney(cart_total_price_value, cart.currency);
      }
    });
  }

  function removeCartItemCartPage(line) {
    fetch('/cart/change.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
      body: JSON.stringify({ line: parseInt(line), quantity: 0 })
    })
    .then(response => response.json())
    .then(cart => {
       
      //updateCartDrawer();
        document.querySelector(`.cart-item[data-line="${line}"]`).remove();
        const remainingItemsDrover = document.querySelectorAll('.cart-item');
        remainingItemsDrover.forEach((item, index) => {
            //item.setAttribute('data-line', index + 1); // Shopify uses 1-based line numbers
            const newLine = index + 1;
            item.setAttribute('data-line', newLine);

            // Update the corresponding remove link if it exists
            const removeLinkDrover = item.querySelector('.remove-item');
            if (removeLinkDrover) {
                removeLinkDrover.setAttribute('data-line', newLine);
            }   
        });
      
        document.querySelector(`.cart-item-page[data-line="${line}"]`).remove();
        // Recalculate and update data-line attributes for each remaining item
        const remainingItems = document.querySelectorAll('.cart-item-page');
        remainingItems.forEach((item, index) => {
            //item.setAttribute('data-line', index + 1); // Shopify uses 1-based line numbers
            const newLine = index + 1;
            item.setAttribute('data-line', newLine);

            // Update the corresponding remove link if it exists
            const removeLink = item.querySelector('.cart-page-remove-item');
            if (removeLink) {
                removeLink.setAttribute('data-line', newLine);
            }
            
        });
      
        var cart_total_price_value = cart.original_total_price - cart.total_discount;
        document.querySelector('#cart_total_discount').textContent = formatMoney(cart.total_discount, cart.currency);
        document.querySelector('.cart-drawer-footer').textContent = formatMoney(cart_total_price_value, cart.currency);
        document.querySelector('.cart-page-drawer-footer').textContent = formatMoney(cart_total_price_value, cart.currency);
        
        var totalCartQuantityElement = document.getElementById('total-cart-quantity');
        totalCartQuantityElement.textContent = cart_pege_calculateTotalQuantity(cart.items);
        if (cart.item_count == 0) {
            document.getElementById('cart_footer').style.display = 'none';
            document.getElementById('cart-empty-message').style.display = 'flex';
            document.getElementById('cart_page_footer').style.display = 'none';
            document.getElementById('cart-page-empty-message').style.display = 'flex';
        }
    });
  }
  
  function formatMoney(cents, currency) {
    let money = (cents / 100).toFixed(2);
    switch (currency) {
      case 'USD':
        return `$${money}`;
      case 'EUR':
        return `€${money}`;
      case 'GBP':
        return `£${money}`;
      // Add more currency cases as needed
      default:
        return `${money} ${currency}`;
    }
}

  function cart_pege_calculateTotalQuantity(items) {
    //return items.reduce((total, item) => total + item.quantity, 0);
    if (!Array.isArray(items) || items.length === 0) {
        return 0; // or another fallback value if you prefer
    }
    return items.reduce((total, item) => total + item.quantity, 0);
  }
  
  document.addEventListener('cart:updated', updateCartDrawer);
  // Call updateCartDrawer initially to load the cart contents
  updateCartDrawer();    
});
//cart drower end      
</script>  

{% schema %}
{
  "name": "t:sections.main-cart-items.name",
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
